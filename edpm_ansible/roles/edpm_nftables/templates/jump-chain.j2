# Managed by edpm-ansible/edpm_nftables
{% set chains = namespace(chains=[]) %}
{% if nft_is_update|default(false)|bool %}

{# Add missing jumps only (usually during day-2 operations) #}
{%   set existing = (current_nft['stdout']|from_json)['nftables']|map(attribute='rule', default={})|list %}
{%   for ruleset in edpm_nftables_rules %}
{%     set rule=ruleset['rule'] %}
{%     set query="[? table==`"~rule.get('table', 'filter')~"` && family==`inet` && chain==`"~rule.get('chain', 'INPUT')~"`].expr[*].jump.target" %}
{%     set chain_key = rule.get('chain', 'INPUT') ~ rule.get('table', 'filter') %}
{%     if chain_key not in chains.chains %}
{%       if '{{ edpm_nftables_chains_prefix }}_'~rule.get('chain', 'INPUT') not in (existing|json_query(query)|flatten) %}
insert rule inet {{ rule.get('table', 'filter') }} {{ rule.get('chain', 'INPUT') }} position 0 jump {{ edpm_nftables_chains_prefix }}_{{ rule.get('chain', 'INPUT') }}
{%       endif %}
{%       set _ = chains.chains.append(chain_key) %}
{%     endif %}
{%   endfor %}
{% else %}

{# Insert all jumps to custom chains (usually during boot) #}
{%   for ruleset in edpm_nftables_rules %}
{%     set rule=ruleset['rule'] %}
{%     if 'extras' not in rule or rule['extras'].get('ensure', 'present') in ['enabled', 'present'] %}
{%       set chain_key = rule.get('chain', 'INPUT') ~ rule.get('table', 'filter') %}
{%       if chain_key not in chains.chains %}
insert rule inet {{ rule.get('table', 'filter') }} {{ rule.get('chain', 'INPUT') }} position 0 jump {{ edpm_nftables_chains_prefix }}_{{ rule.get('chain', 'INPUT') }}
{%        set _ = chains.chains.append(chain_key) %}
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}
